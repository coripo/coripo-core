{"version":3,"sources":["../src/event.class.js"],"names":["Event","config","overlapRule","ALLOW","TRIM","REMOVE","SPLIT","id","generatorId","title","color","note","since","till","repeats","sequels","virtual","repeated","priority","overlap","internal","external","offsetDate","date","scale","step","offsetYear","offsetMonth","offsetDay","Error","getRepeats","_since","_till","qSince","int","qTill","events","forEach","pattern","index","times","round","cursor","cycle","concat","length","query","getSequels","sequel","sequelDates","offset","realSequel","collides","event","qEvent","collisions","handleOverlaps","_events","reduce","evts","parallels","filter","evt","sort","a","b","items","conflicts","master","slaves","slice","trimmedSlaves","map","slave","collision","includes","_output","output","undefined","qsince","qtill","range","e","exports"],"mappings":";;AAAA,IAAMA,QAAQ,SAASA,KAAT,CAAeC,MAAf,EAAuB;AACnC,MAAMC,cAAc,EAAEC,OAAO,OAAT,EAAkBC,MAAM,MAAxB,EAAgCC,QAAQ,QAAxC,EAAkDC,OAAO,OAAzD,EAApB;AACA,MAAMC,KAAKN,OAAOM,EAAP,IAAa,CAAxB;AACA,MAAMC,cAAcP,OAAOO,WAAP,IAAsB,SAA1C;AACA,MAAMC,QAAQR,OAAOQ,KAArB;AACA,MAAMC,QAAQT,OAAOS,KAAP,IAAgB,SAA9B;AACA,MAAMC,OAAOV,OAAOU,IAAP,IAAe,EAA5B;AACA,MAAMC,QAAQX,OAAOW,KAArB;AACA,MAAMC,OAAOZ,OAAOY,IAAP,IAAeZ,OAAOW,KAAnC;AACA,MAAME,UAAUb,OAAOa,OAAP,IAAkB,EAAlC;AACA,MAAMC,UAAUd,OAAOc,OAAP,IAAkB,EAAlC;AACA,MAAMC,UAAUf,OAAOe,OAAP,IAAkB,KAAlC;AACA,MAAMC,WAAWhB,OAAOgB,QAAP,IAAmB,KAApC;AACA,MAAMC,WAAWjB,OAAOiB,QAAP,IAAmB,CAApC;AACA,MAAMC,UAAUlB,OAAOkB,OAAP,IAAkB,EAAlC;AACAA,UAAQC,QAAR,GAAmBD,QAAQC,QAAR,IAAoBlB,YAAYC,KAAnD;AACAgB,UAAQE,QAAR,GAAmBF,QAAQE,QAAR,IAAoBnB,YAAYC,KAAnD;;AAEA,MAAMmB,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAOC,KAAP,EAAcC,IAAd,EAAuB;AACxC,YAAQD,KAAR;AACE,WAAK,MAAL;AAAa;AACX,iBAAOD,KAAKG,UAAL,CAAgBD,IAAhB,CAAP;AACD;AACD,WAAK,OAAL;AAAc;AACZ,iBAAOF,KAAKI,WAAL,CAAiBF,IAAjB,CAAP;AACD;AACD,WAAK,KAAL;AAAY;AACV,iBAAOF,KAAKK,SAAL,CAAeH,IAAf,CAAP;AACD;AACD;AAAS;AACP,gBAAM,IAAII,KAAJ,CAAU,4CAAV,CAAN;AACD;AAZH;AAcD,GAfD;;AAiBA,MAAMC,aAAa,SAAbA,UAAa,CAACC,MAAD,EAASC,KAAT,EAAmB;AACpC,QAAMC,SAAUD,MAAME,GAAN,MAAeH,OAAOG,GAAP,EAAhB,GAAgCF,KAAhC,GAAwCD,MAAvD;AACA,QAAMI,QAASJ,OAAOG,GAAP,MAAgBF,MAAME,GAAN,EAAjB,GAAgCH,MAAhC,GAAyCC,KAAvD;AACA,QAAII,SAAS,EAAb;;AAEAtB,YAAQuB,OAAR,CAAgB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAClC,UAAIC,QAAQF,QAAQE,KAApB;AACA,UAAIC,QAAQ,CAAZ;AACA,UAAIC,SAAS;AACX9B,eAAOU,WAAWV,KAAX,EAAkB0B,QAAQK,KAA1B,EAAiCL,QAAQb,IAAzC,CADI;AAEXZ,cAAMS,WAAWT,IAAX,EAAiByB,QAAQK,KAAzB,EAAgCL,QAAQb,IAAxC;AAFK,OAAb;AAIA,aAAOe,UAAU,CAAV,IAAeE,OAAO9B,KAAP,CAAasB,GAAb,MAAsBC,MAAMD,GAAN,EAA5C,EAAyD;AACvD,YAAIQ,OAAO9B,KAAP,CAAasB,GAAb,MAAsBD,OAAOC,GAAP,EAA1B,EAAwC;AACtCE,mBAASA,OAAOQ,MAAP,CAAe,IAAI5C,KAAJ,CAAU;AAChCO,kBADgC;AAEhCC,oCAFgC;AAGhCQ,qBAAS,IAHuB;AAIhCC,sBAAU,IAJsB;AAKhCE,4BALgC;AAMhCD,sBAAUA,WAAYuB,SAASF,QAAQ,CAAjB,KAAuBxB,QAAQ8B,MAAR,GAAiB,CAAxC,CANU;AAOhCpC,wBAPgC;AAQhCC,wBARgC;AAShCC,sBATgC;AAUhCI,4BAVgC;AAWhCH,mBAAO8B,OAAO9B,KAXkB;AAYhCC,kBAAM6B,OAAO7B;AAZmB,WAAV,CAAD,CAanBiC,KAbmB,CAabb,MAba,EAaLE,KAbK,EAaE,SAbF,CAAd,CAAT;AAcD;AACDO,iBAAS;AACP9B,iBAAOU,WAAWoB,OAAO9B,KAAlB,EAAyB0B,QAAQK,KAAjC,EAAwCL,QAAQb,IAAhD,CADA;AAEPZ,gBAAMS,WAAWoB,OAAO7B,IAAlB,EAAwByB,QAAQK,KAAhC,EAAuCL,QAAQb,IAA/C;AAFC,SAAT;AAIAgB,iBAAS,CAAT;AACAD,iBAAS,CAAT;AACD;AACF,KA/BD;AAgCA,WAAOJ,MAAP;AACD,GAtCD;;AAwCA,MAAMW,aAAa,SAAbA,UAAa,CAAChB,MAAD,EAASC,KAAT,EAAmB;AACpC,QAAMC,SAAUD,MAAME,GAAN,MAAeH,OAAOG,GAAP,EAAhB,GAAgCF,KAAhC,GAAwCD,MAAvD;AACA,QAAMI,QAASJ,OAAOG,GAAP,MAAgBF,MAAME,GAAN,EAAjB,GAAgCH,MAAhC,GAAyCC,KAAvD;AACA,QAAII,SAAS,EAAb;;AAEArB,YAAQsB,OAAR,CAAgB,UAACW,MAAD,EAAST,KAAT,EAAmB;AACjC,UAAMU,cAAc;AAClBrC,eAAOU,WAAWV,KAAX,EAAkBoC,OAAOpC,KAAP,CAAaY,KAA/B,EAAsCwB,OAAOpC,KAAP,CAAasC,MAAnD,CADW;AAElBrC,cAAMS,WAAWV,KAAX,EAAkBoC,OAAOnC,IAAP,CAAYW,KAA9B,EAAqCwB,OAAOnC,IAAP,CAAYqC,MAAjD;AAFY,OAApB;AAIA,UAAMC,aAAa,IAAInD,KAAJ,CAAU;AAC3BO,cAD2B;AAE3BC,gCAF2B;AAG3BQ,iBAAS,IAHkB;AAI3BC,0BAJ2B;AAK3BE,wBAL2B;AAM3BD,kBAAUA,YAAYqB,QAAQ,CAApB,CANiB;AAO3B9B,eAAOuC,OAAOvC,KAAP,IAAgBA,KAPI;AAQ3BE,cAAMqC,OAAOrC,IAAP,IAAeA,IARM;AAS3BD,eAAOsC,OAAOtC,KAAP,IAAgBA,KATI;AAU3BE,eAAOqC,YAAYrC,KAVQ;AAW3BC,cAAMoC,YAAYpC;AAXS,OAAV,CAAnB;AAaAuB,eAASA,OAAOQ,MAAP,CAAeO,UAAD,CAAaL,KAAb,CAAmBb,MAAnB,EAA2BE,KAA3B,EAAkC,SAAlC,CAAd,CAAT;AACD,KAnBD;AAoBA,WAAOC,MAAP;AACD,GA1BD;;AA4BA,MAAMgB,YAAW,SAAXA,SAAW,CAACC,KAAD,EAAQtB,MAAR,EAAgBC,KAAhB,EAA0B;AACzC,QAAMsB,SAASD,SAAS,EAAEzC,YAAF,EAASC,UAAT,EAAxB;AACA,QAAMoB,SAAUD,MAAME,GAAN,MAAeH,OAAOG,GAAP,EAAhB,GAAgCF,KAAhC,GAAwCD,MAAvD;AACA,QAAMI,QAASJ,OAAOG,GAAP,MAAgBF,MAAME,GAAN,EAAjB,GAAgCH,MAAhC,GAAyCC,KAAvD;AACA,QAAIuB,aAAa,EAAjB;AACA,QAAItB,OAAOC,GAAP,MAAgBoB,OAAO1C,KAAP,CAAasB,GAAb,EAAhB,IAAsCC,MAAMD,GAAN,MAAeoB,OAAO1C,KAAP,CAAasB,GAAb,EAAzD,EAA6E;AAC3EqB,mBAAaA,WAAWX,MAAX,CAAkB,CAAC,GAAD,CAAlB,CAAb;AACD;AACD,QAAIX,OAAOC,GAAP,MAAgBoB,OAAOzC,IAAP,CAAYqB,GAAZ,EAAhB,IAAqCC,MAAMD,GAAN,MAAeoB,OAAOzC,IAAP,CAAYqB,GAAZ,EAAxD,EAA2E;AACzEqB,mBAAaA,WAAWX,MAAX,CAAkB,CAAC,GAAD,CAAlB,CAAb;AACD;AACD,QAAIX,OAAOC,GAAP,MAAgBoB,OAAO1C,KAAP,CAAasB,GAAb,EAAhB,IAAsCC,MAAMD,GAAN,MAAeoB,OAAOzC,IAAP,CAAYqB,GAAZ,EAAzD,EAA4E;AAC1EqB,mBAAaA,WAAWX,MAAX,CAAkB,CAAC,GAAD,CAAlB,CAAb;AACD;AACD,QAAIW,WAAWV,MAAf,EAAuB,OAAOU,UAAP;AACvB,WAAO,KAAP;AACD,GAhBD;;AAkBA,MAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,OAAD,EAAU1B,MAAV,EAAkBC,KAAlB,EAA4B;AACjD,QAAII,SAASqB,OAAb;AACA,YAAQtC,QAAQC,QAAhB;AACE,WAAKlB,YAAYC,KAAjB;AAAwB;AACtB;AACD;AACD,WAAKD,YAAYG,MAAjB;AAAyB;AACvB+B,mBAASA,OAAOsB,MAAP,CAAc,UAACC,IAAD,EAAON,KAAP,EAAiB;AACtC,gBAAMO,YAAYD,KACfE,MADe,CACR;AAAA,qBAAOC,IAAI9C,OAAJ,IAAeoC,UAASC,KAAT,EAAgBS,IAAIlD,KAApB,EAA2BkD,IAAIjD,IAA/B,CAAtB;AAAA,aADQ,EAEfkD,IAFe,CAEV,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUA,EAAE/C,QAAF,GAAa8C,EAAE9C,QAAzB;AAAA,aAFU,CAAlB;AAGA,gBAAI,CAAC0C,UAAUf,MAAf,EAAuB,OAAOc,KAAKf,MAAL,CAAY,CAACS,KAAD,CAAZ,CAAP;AACvB,gBAAMa,QAAQP,KACXE,MADW,CACJ;AAAA,qBAAO,EAAEC,IAAI9C,OAAJ,IAAeoC,UAASC,KAAT,EAAgBS,IAAIlD,KAApB,EAA2BkD,IAAIjD,IAA/B,CAAjB,CAAP;AAAA,aADI,CAAd;AAEA,mBAAOqD,MAAMtB,MAAN,CAAa,CAACgB,UAAU,CAAV,CAAD,CAAb,CAAP;AACD,WARQ,EAQN,EARM,CAAT;AASA;AACD;AACD,WAAK1D,YAAYE,IAAjB;AAAuB;AACrBgC,mBAASA,OAAOsB,MAAP,CAAc,UAACC,IAAD,EAAON,KAAP,EAAiB;AACtC,gBAAMO,YAAYD,KAAKE,MAAL,CAAY;AAAA,qBAAOC,IAAI9C,OAAJ,IAAeoC,UAASC,KAAT,EAAgBS,IAAIlD,KAApB,EAA2BkD,IAAIjD,IAA/B,CAAtB;AAAA,aAAZ,CAAlB;AACA,gBAAI,CAAC+C,UAAUf,MAAf,EAAuB,OAAOc,KAAKf,MAAL,CAAY,CAACS,KAAD,CAAZ,CAAP;AACvB,gBAAIa,QAAQP,KAAKE,MAAL,CAAY;AAAA,qBAAO,EAAEC,IAAI9C,OAAJ,IAAeoC,UAASC,KAAT,EAAgBS,IAAIlD,KAApB,EAA2BkD,IAAIjD,IAA/B,CAAjB,CAAP;AAAA,aAAZ,CAAZ;AACA,gBAAMsD,YAAYP,UAAUhB,MAAV,CAAiB,CAACS,KAAD,CAAjB,EAA0BU,IAA1B,CAA+B,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUA,EAAE/C,QAAF,GAAa8C,EAAE9C,QAAzB;AAAA,aAA/B,CAAlB;AACA,gBAAMkD,SAASD,UAAU,CAAV,CAAf;AACA,gBAAME,SAASF,UAAUG,KAAV,CAAgB,CAAhB,CAAf;AACAJ,oBAAQA,MAAMtB,MAAN,CAAa,CAACwB,MAAD,CAAb,CAAR;AACA,gBAAMG,gBAAgBF,OAAOG,GAAP,CAAW,UAACV,GAAD,EAAS;AACxC,kBAAIW,QAAQX,GAAZ;AACA,kBAAIY,YAAYtB,UAASqB,KAAT,EAAgBL,OAAOxD,KAAvB,EAA8BwD,OAAOvD,IAArC,CAAhB;AACA,qBAAO6D,SAAP,EAAkB;AAChB,oBAAIA,UAAUC,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;AAC3BF,0BAAS,IAAIzE,KAAJ,CAAU;AACjBO,wBAAIkE,MAAMlE,EADO;AAEjBC,iCAAaiE,MAAMjE,WAFF;AAGjBQ,6BAASyD,MAAMzD,OAHE;AAIjBC,8BAAUwD,MAAMxD,QAJC;AAKjBE,6BAASsD,MAAMtD,OALE;AAMjBD,8BAAUuD,MAAMvD,QANC;AAOjBT,2BAAOgE,MAAMhE,KAPI;AAQjBE,0BAAM8D,MAAM9D,IARK;AASjBD,2BAAO+D,MAAM/D,KATI;AAUjBE,2BAAO6D,MAAM7D,KAVI;AAWjBC,0BAAMuD,OAAOxD,KAAP,CAAagB,SAAb,CAAuB,CAAC,CAAxB;AAXW,mBAAV,CAAD,CAYJkB,KAZI,CAYEf,MAZF,EAYUC,KAZV,EAYiB,SAZjB,EAY4B,CAZ5B,CAAR;AAaD,iBAdD,MAcO,IAAI0C,UAAUC,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;AAClCF,0BAAS,IAAIzE,KAAJ,CAAU;AACjBO,wBAAIkE,MAAMlE,EADO;AAEjBC,iCAAaiE,MAAMjE,WAFF;AAGjBQ,6BAASyD,MAAMzD,OAHE;AAIjBC,8BAAUwD,MAAMxD,QAJC;AAKjBE,6BAASsD,MAAMxD,QALE;AAMjBC,8BAAUuD,MAAMvD,QANC;AAOjBT,2BAAOgE,MAAMhE,KAPI;AAQjBE,0BAAM8D,MAAM9D,IARK;AASjBD,2BAAO+D,MAAM/D,KATI;AAUjBE,2BAAOwD,OAAOvD,IAAP,CAAYe,SAAZ,CAAsB,CAAtB,CAVU;AAWjBf,0BAAM4D,MAAM5D;AAXK,mBAAV,CAAD,CAYJiC,KAZI,CAYEf,MAZF,EAYUC,KAZV,EAYiB,SAZjB,EAY4B,CAZ5B,CAAR;AAaD;AACD0C,4BAAYtB,UAASqB,KAAT,EAAgBL,OAAOxD,KAAvB,EAA8BwD,OAAOvD,IAArC,CAAZ;AACD;AACD,qBAAO4D,KAAP;AACD,aApCqB,EAoCnBZ,MApCmB,CAoCZ;AAAA,qBAAOC,IAAIjD,IAAJ,CAASqB,GAAT,KAAiB4B,IAAIlD,KAAJ,CAAUsB,GAAV,EAAjB,IAAoC,CAA3C;AAAA,aApCY,CAAtB;AAqCA,mBAAOgC,MAAMtB,MAAN,CAAa2B,aAAb,CAAP;AACD,WA9CQ,EA8CN,EA9CM,CAAT;AA+CA;AACD;AACD,WAAKrE,YAAYI,KAAjB;AAAwB;AACtB;AACA;AACD;AACD;AACE;AAvEJ;;AA0EA,WAAO8B,MAAP;AACD,GA7ED;;AA+EA,MAAMU,QAAQ,SAARA,KAAQ,CAACf,MAAD,EAASC,KAAT,EAAgB4C,OAAhB,EAA4B;AACxC,QAAMC,SAASD,WAAW,QAA1B;AACA,QAAIxC,SAAS,GAAGQ,MAAH,CAAUQ,UAAS0B,SAAT,EAAoB/C,MAApB,EAA4BC,KAA5B,IAAqC,CAC1D;AACEzB,YADF;AAEEC,8BAFF;AAGEQ,sBAHF;AAIEC,wBAJF;AAKEE,eAASA,QAAQE,QALnB;AAMEH,wBANF;AAOET,kBAPF;AAQEC,kBARF;AASEC,gBATF;AAUEC,kBAVF;AAWEC,gBAXF;AAYEuC,gBAAU,kBAAC2B,MAAD,EAASC,KAAT;AAAA,eAAmB5B,UAAS0B,SAAT,EAAoBC,MAApB,EAA4BC,KAA5B,CAAnB;AAAA;AAZZ,KAD0D,CAArC,GAenB,EAfS,EAgBVpC,MAhBU,CAgBHG,WAAWhB,MAAX,EAAmBC,KAAnB,CAhBG,EAiBVY,MAjBU,CAiBHd,WAAWC,MAAX,EAAmBC,KAAnB,CAjBG,CAAb;AAkBAI,aAASoB,eAAepB,MAAf,EAAuBL,MAAvB,EAA+BC,KAA/B,EACN+B,IADM,CACD,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,EAAEpD,KAAF,CAAQsB,GAAR,KAAgB+B,EAAErD,KAAF,CAAQsB,GAAR,EAA1B;AAAA,KADC,CAAT;AAEA,QAAI2C,WAAW,SAAf,EAA0B,OAAOzC,MAAP;AAC1B,WAAO;AACL5B,mBAAa4B,OAAOS,MAAP,GAAgBT,OAAO,CAAP,EAAU5B,WAA1B,GAAwCsE,SADhD;AAEL3D,eAASiB,OAAOS,MAAP,GAAgBT,OAAO,CAAP,EAAUjB,OAA1B,GAAoC2D,SAFxC;AAGL1C,oBAHK;AAIL6C,aAAO7C,OAAOS,MAAP,GAAiB;AAAA,eAAQc,KAC7Bf,MAD6B,CACrBzB,QAAQE,QAAR,CAAiBsD,QAAjB,CAA0B,SAA1B,CAAD,GACN7B,MAAMlC,MAAMc,UAAN,CAAiB,CAAC,EAAlB,CAAN,EAA6Bb,IAA7B,EAAmC,SAAnC,CADM,GAC0C,EAFpB,EAG7B6C,MAH6B,CAGtB,UAACuB,KAAD,EAAQC,CAAR;AAAA,iBAAe;AACrBtE,mBAAOsE,EAAEtE,KAAF,CAAQsB,GAAR,KAAgB+C,MAAMrE,KAAN,CAAYsB,GAAZ,EAAhB,GAAoCgD,EAAEtE,KAAtC,GAA8CqE,MAAMrE,KADtC;AAErBC,kBAAMqE,EAAErE,IAAF,CAAOqB,GAAP,KAAe+C,MAAMpE,IAAN,CAAWqB,GAAX,EAAf,GAAkCgD,EAAErE,IAApC,GAA2CoE,MAAMpE;AAFlC,WAAf;AAAA,SAHsB,EAM1B;AACFD,iBAAO+C,KAAK,CAAL,EAAQ/C,KADb;AAEFC,gBAAM8C,KAAK,CAAL,EAAQ9C;AAFZ,SAN0B,CAAR;AAAA,OAAD,CAUrBuB,MAVqB,CAAhB,GAUK0C;AAdP,KAAP;AAgBD,GAvCD;;AAyCA,SAAO;AACLvE,UADK;AAELC,4BAFK;AAGLQ,oBAHK;AAILC,sBAJK;AAKLR,gBALK;AAMLC,gBANK;AAOLC,cAPK;AAQLC,gBARK;AASLC,cATK;AAULM,aAASA,QAAQE,QAVZ;AAWL+B,cAAU,kBAACrB,MAAD,EAASC,KAAT;AAAA,aAAmBoB,UAAS0B,SAAT,EAAoB/C,MAApB,EAA4BC,KAA5B,CAAnB;AAAA,KAXL;AAYLc;AAZK,GAAP;AAcD,CA/PD;;AAiQAqC,QAAQnF,KAAR,GAAgBA,KAAhB","file":"event.class.js","sourcesContent":["const Event = function Event(config) {\n  const overlapRule = { ALLOW: 'allow', TRIM: 'trim', REMOVE: 'remove', SPLIT: 'split' };\n  const id = config.id || 0;\n  const generatorId = config.generatorId || 'unknown';\n  const title = config.title;\n  const color = config.color || '#000000';\n  const note = config.note || '';\n  const since = config.since;\n  const till = config.till || config.since;\n  const repeats = config.repeats || [];\n  const sequels = config.sequels || [];\n  const virtual = config.virtual || false;\n  const repeated = config.repeated || false;\n  const priority = config.priority || 0;\n  const overlap = config.overlap || {};\n  overlap.internal = overlap.internal || overlapRule.ALLOW;\n  overlap.external = overlap.external || overlapRule.ALLOW;\n\n  const offsetDate = (date, scale, step) => {\n    switch (scale) {\n      case 'year': {\n        return date.offsetYear(step);\n      }\n      case 'month': {\n        return date.offsetMonth(step);\n      }\n      case 'day': {\n        return date.offsetDay(step);\n      }\n      default: {\n        throw new Error('Invalid scale string for offsetDate method');\n      }\n    }\n  };\n\n  const getRepeats = (_since, _till) => {\n    const qSince = (_till.int() <= _since.int()) ? _till : _since;\n    const qTill = (_since.int() >= _till.int()) ? _since : _till;\n    let events = [];\n\n    repeats.forEach((pattern, index) => {\n      let times = pattern.times;\n      let round = 1;\n      let cursor = {\n        since: offsetDate(since, pattern.cycle, pattern.step),\n        till: offsetDate(till, pattern.cycle, pattern.step),\n      };\n      while (times !== 0 && cursor.since.int() <= qTill.int()) {\n        if (cursor.since.int() >= qSince.int()) {\n          events = events.concat((new Event({\n            id,\n            generatorId,\n            virtual: true,\n            repeated: true,\n            overlap,\n            priority: priority + (round * (index + 1) * (sequels.length + 1)),\n            title,\n            color,\n            note,\n            sequels,\n            since: cursor.since,\n            till: cursor.till,\n          })).query(qSince, qTill, 'event[]'));\n        }\n        cursor = {\n          since: offsetDate(cursor.since, pattern.cycle, pattern.step),\n          till: offsetDate(cursor.till, pattern.cycle, pattern.step),\n        };\n        round += 1;\n        times -= 1;\n      }\n    });\n    return events;\n  };\n\n  const getSequels = (_since, _till) => {\n    const qSince = (_till.int() <= _since.int()) ? _till : _since;\n    const qTill = (_since.int() >= _till.int()) ? _since : _till;\n    let events = [];\n\n    sequels.forEach((sequel, index) => {\n      const sequelDates = {\n        since: offsetDate(since, sequel.since.scale, sequel.since.offset),\n        till: offsetDate(since, sequel.till.scale, sequel.till.offset),\n      };\n      const realSequel = new Event({\n        id,\n        generatorId,\n        virtual: true,\n        repeated,\n        overlap,\n        priority: priority + (index + 1),\n        title: sequel.title || title,\n        note: sequel.note || note,\n        color: sequel.color || color,\n        since: sequelDates.since,\n        till: sequelDates.till,\n      });\n      events = events.concat((realSequel).query(qSince, qTill, 'event[]'));\n    });\n    return events;\n  };\n\n  const collides = (event, _since, _till) => {\n    const qEvent = event || { since, till };\n    const qSince = (_till.int() <= _since.int()) ? _till : _since;\n    const qTill = (_since.int() >= _till.int()) ? _since : _till;\n    let collisions = [];\n    if (qSince.int() <= qEvent.since.int() && qTill.int() >= qEvent.since.int()) {\n      collisions = collisions.concat(['l']);\n    }\n    if (qSince.int() <= qEvent.till.int() && qTill.int() >= qEvent.till.int()) {\n      collisions = collisions.concat(['r']);\n    }\n    if (qSince.int() >= qEvent.since.int() && qTill.int() <= qEvent.till.int()) {\n      collisions = collisions.concat(['c']);\n    }\n    if (collisions.length) return collisions;\n    return false;\n  };\n\n  const handleOverlaps = (_events, _since, _till) => {\n    let events = _events;\n    switch (overlap.internal) {\n      case overlapRule.ALLOW: {\n        break;\n      }\n      case overlapRule.REMOVE: {\n        events = events.reduce((evts, event) => {\n          const parallels = evts\n            .filter(evt => evt.virtual && collides(event, evt.since, evt.till))\n            .sort((a, b) => b.priority - a.priority);\n          if (!parallels.length) return evts.concat([event]);\n          const items = evts\n            .filter(evt => !(evt.virtual && collides(event, evt.since, evt.till)));\n          return items.concat([parallels[0]]);\n        }, []);\n        break;\n      }\n      case overlapRule.TRIM: {\n        events = events.reduce((evts, event) => {\n          const parallels = evts.filter(evt => evt.virtual && collides(event, evt.since, evt.till));\n          if (!parallels.length) return evts.concat([event]);\n          let items = evts.filter(evt => !(evt.virtual && collides(event, evt.since, evt.till)));\n          const conflicts = parallels.concat([event]).sort((a, b) => b.priority - a.priority);\n          const master = conflicts[0];\n          const slaves = conflicts.slice(1);\n          items = items.concat([master]);\n          const trimmedSlaves = slaves.map((evt) => {\n            let slave = evt;\n            let collision = collides(slave, master.since, master.till);\n            while (collision) {\n              if (collision.includes('r')) {\n                slave = (new Event({\n                  id: slave.id,\n                  generatorId: slave.generatorId,\n                  virtual: slave.virtual,\n                  repeated: slave.repeated,\n                  overlap: slave.overlap,\n                  priority: slave.priority,\n                  title: slave.title,\n                  note: slave.note,\n                  color: slave.color,\n                  since: slave.since,\n                  till: master.since.offsetDay(-1),\n                })).query(_since, _till, 'event[]')[0];\n              } else if (collision.includes('l')) {\n                slave = (new Event({\n                  id: slave.id,\n                  generatorId: slave.generatorId,\n                  virtual: slave.virtual,\n                  repeated: slave.repeated,\n                  overlap: slave.repeated,\n                  priority: slave.priority,\n                  title: slave.title,\n                  note: slave.note,\n                  color: slave.color,\n                  since: master.till.offsetDay(1),\n                  till: slave.till,\n                })).query(_since, _till, 'event[]')[0];\n              }\n              collision = collides(slave, master.since, master.till);\n            }\n            return slave;\n          }).filter(evt => evt.till.int() - evt.since.int() >= 0);\n          return items.concat(trimmedSlaves);\n        }, []);\n        break;\n      }\n      case overlapRule.SPLIT: {\n        // TODO\n        break;\n      }\n      default:\n        break;\n    }\n\n    return events;\n  };\n\n  const query = (_since, _till, _output) => {\n    const output = _output || 'series';\n    let events = [].concat(collides(undefined, _since, _till) ? [\n      {\n        id,\n        generatorId,\n        virtual,\n        repeated,\n        overlap: overlap.external,\n        priority,\n        title,\n        color,\n        note,\n        since,\n        till,\n        collides: (qsince, qtill) => collides(undefined, qsince, qtill),\n      },\n    ] : [])\n      .concat(getSequels(_since, _till))\n      .concat(getRepeats(_since, _till));\n    events = handleOverlaps(events, _since, _till)\n      .sort((a, b) => a.since.int() - b.since.int());\n    if (output === 'event[]') return events;\n    return {\n      generatorId: events.length ? events[0].generatorId : undefined,\n      overlap: events.length ? events[0].overlap : undefined,\n      events,\n      range: events.length ? (evts => evts\n        .concat((overlap.external.includes('forever')) ?\n          query(since.offsetYear(-10), till, 'event[]') : [])\n        .reduce((range, e) => ({\n          since: e.since.int() < range.since.int() ? e.since : range.since,\n          till: e.till.int() > range.till.int() ? e.till : range.till,\n        }), {\n          since: evts[0].since,\n          till: evts[0].till,\n        })\n      )(events) : undefined,\n    };\n  };\n\n  return {\n    id,\n    generatorId,\n    virtual,\n    repeated,\n    title,\n    color,\n    note,\n    since,\n    till,\n    overlap: overlap.external,\n    collides: (_since, _till) => collides(undefined, _since, _till),\n    query,\n  };\n};\n\nexports.Event = Event;\n"]}