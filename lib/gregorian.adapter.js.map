{"version":3,"sources":["../src/gregorian.adapter.js"],"names":["i18next","require","locales","Adapter","config","init","lng","locale","fallbackLng","initImmediate","resources","trl","key","store","data","changeLanguage","t","id","name","description","l10n","date","i18n","ldate","getMonthName","month","short","shortNameKey","fullNameKey","string","Error","getMonthLength","year","Date","getDate","isValid","day","isLeap","offsetYear","offset","i18nDate","jsDate","setFullYear","getFullYear","getMonth","offsetMonth","setMonth","offsetDay","setDate","module","exports"],"mappings":"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","file":"gregorian.adapter.js","sourcesContent":["const i18next = require('i18next');\nconst locales = require('../locales/index.js');\n\nconst Adapter = function Adapter(config = {}) {\n  i18next.init({\n    lng: config.locale || 'en',\n    fallbackLng: 'en',\n    initImmediate: false,\n    resources: locales,\n  });\n  const trl = (key) => {\n    i18next.store.data = locales;\n    i18next.changeLanguage(config.locale || 'en');\n    return i18next.t(key);\n  };\n  const id = 'coripo.coripo.adapter.gregorian';\n  const name = trl('gregorian-adapter.name');\n  const description = trl('gregorian-adapter.description');\n\n  const l10n = date => date;\n\n  const i18n = ldate => ldate;\n\n  const getMonthName = (month, short) => {\n    const shortNameKey = `gregorian-adapter.months.${month}.short`;\n    const fullNameKey = `gregorian-adapter.months.${month}.name`;\n    const string = short ? trl(shortNameKey) : trl(fullNameKey);\n    if (string === shortNameKey || string === fullNameKey) {\n      throw new Error('Invalid month number, number should be between 1 and 12');\n    }\n    return string;\n  };\n\n  const getMonthLength = (year, month) => new Date(year, month, 0).getDate();\n\n  const isValid = date => (date.year >= 1)\n    && (date.month >= 1 && date.month <= 12)\n    && (date.day >= 1 && date.day <= getMonthLength(date.year, date.month));\n\n  const isLeap = year => ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n\n  const offsetYear = (date, offset) => {\n    const i18nDate = i18n({ year: date.year, month: date.month, day: date.day });\n    const jsDate = new Date(`${i18nDate.year}-${i18nDate.month}-${i18nDate.day}`);\n    jsDate.setFullYear(jsDate.getFullYear() + offset);\n    return l10n({\n      year: jsDate.getFullYear(),\n      month: jsDate.getMonth() + 1,\n      day: jsDate.getDate(),\n    });\n  };\n\n  const offsetMonth = (date, offset) => {\n    const i18nDate = i18n({ year: date.year, month: date.month, day: date.day });\n    const jsDate = new Date(`${i18nDate.year}-${i18nDate.month}-${i18nDate.day}`);\n    jsDate.setMonth(jsDate.getMonth() + offset);\n    return l10n({\n      year: jsDate.getFullYear(),\n      month: jsDate.getMonth() + 1,\n      day: jsDate.getDate(),\n    });\n  };\n\n  const offsetDay = (date, offset) => {\n    const i18nDate = i18n({ year: date.year, month: date.month, day: date.day });\n    const jsDate = new Date(`${i18nDate.year}-${i18nDate.month}-${i18nDate.day}`);\n    jsDate.setDate(jsDate.getDate() + offset);\n    return l10n({\n      year: jsDate.getFullYear(),\n      month: jsDate.getMonth() + 1,\n      day: jsDate.getDate(),\n    });\n  };\n\n  return {\n    id,\n    name,\n    description,\n    l10n,\n    i18n,\n    isValid,\n    isLeap,\n    getMonthName,\n    getMonthLength,\n    offsetYear,\n    offsetMonth,\n    offsetDay,\n  };\n};\n\nmodule.exports = Adapter;\n"]}