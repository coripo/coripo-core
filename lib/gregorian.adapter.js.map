{"version":3,"sources":["../src/gregorian.adapter.js"],"names":["Adapter","id","name","description","months","short","l10n","date","i18n","ldate","getMonthName","month","mon","Error","getMonthLength","year","Date","getDate","isValid","day","isLeap","offsetYear","offset","i18nDate","jsDate","setFullYear","getFullYear","getMonth","offsetMonth","setMonth","offsetDay","setDate","exports"],"mappings":";;AAAA,IAAMA,UAAU,SAASA,OAAT,GAAmB;AACjC,MAAMC,KAAK,iCAAX;AACA,MAAMC,OAAO,WAAb;AACA,MAAMC,cAAc,gFAApB;;AAEA,MAAMC,SAAS,CACb,EAAEF,MAAM,SAAR,EAAmBG,OAAO,KAA1B,EADa,EAEb,EAAEH,MAAM,UAAR,EAAoBG,OAAO,KAA3B,EAFa,EAGb,EAAEH,MAAM,OAAR,EAAiBG,OAAO,KAAxB,EAHa,EAIb,EAAEH,MAAM,OAAR,EAAiBG,OAAO,KAAxB,EAJa,EAKb,EAAEH,MAAM,KAAR,EAAeG,OAAO,KAAtB,EALa,EAMb,EAAEH,MAAM,MAAR,EAAgBG,OAAO,KAAvB,EANa,EAOb,EAAEH,MAAM,MAAR,EAAgBG,OAAO,KAAvB,EAPa,EAQb,EAAEH,MAAM,QAAR,EAAkBG,OAAO,KAAzB,EARa,EASb,EAAEH,MAAM,WAAR,EAAqBG,OAAO,MAA5B,EATa,EAUb,EAAEH,MAAM,SAAR,EAAmBG,OAAO,KAA1B,EAVa,EAWb,EAAEH,MAAM,UAAR,EAAoBG,OAAO,KAA3B,EAXa,EAYb,EAAEH,MAAM,UAAR,EAAoBG,OAAO,KAA3B,EAZa,CAAf;;AAeA,MAAMC,OAAO,SAAPA,IAAO;AAAA,WAAQC,IAAR;AAAA,GAAb;;AAEA,MAAMC,OAAO,SAAPA,IAAO;AAAA,WAASC,KAAT;AAAA,GAAb;;AAEA,MAAMC,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAQN,KAAR,EAAkB;AACrC,QAAMO,MAAOR,OAAOO,QAAQ,CAAf,CAAb;AACA,QAAI,OAAOC,GAAP,KAAe,WAAnB,EAAgC;AAC9B,YAAM,IAAIC,KAAJ,CAAU,yDAAV,CAAN;AACD;AACD,WAAOR,QAAQO,IAAIP,KAAZ,GAAoBO,IAAIV,IAA/B;AACD,GAND;;AAQA,MAAMY,iBAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAOJ,KAAP;AAAA,WAAiB,IAAIK,IAAJ,CAASD,IAAT,EAAeJ,KAAf,EAAsB,CAAtB,EAAyBM,OAAzB,EAAjB;AAAA,GAAvB;;AAEA,MAAMC,UAAU,SAAVA,OAAU;AAAA,WAASX,KAAKQ,IAAL,IAAa,CAAd,IAClBR,KAAKI,KAAL,IAAc,CAAd,IAAmBJ,KAAKI,KAAL,IAAc,EADf,IAElBJ,KAAKY,GAAL,IAAY,CAAZ,IAAiBZ,KAAKY,GAAL,IAAYL,eAAeP,KAAKQ,IAApB,EAA0BR,KAAKI,KAA/B,CAFnB;AAAA,GAAhB;;AAIA,MAAMS,SAAS,SAATA,MAAS;AAAA,WAAUL,OAAO,CAAP,KAAa,CAAd,IAAqBA,OAAO,GAAP,KAAe,CAArC,IAA6CA,OAAO,GAAP,KAAe,CAApE;AAAA,GAAf;;AAEA,MAAMM,aAAa,SAAbA,UAAa,CAACd,IAAD,EAAOe,MAAP,EAAkB;AACnC,QAAMC,WAAWf,KAAK,EAAEO,MAAMR,KAAKQ,IAAb,EAAmBJ,OAAOJ,KAAKI,KAA/B,EAAsCQ,KAAKZ,KAAKY,GAAhD,EAAL,CAAjB;AACA,QAAMK,SAAS,IAAIR,IAAJ,CAAYO,SAASR,IAArB,SAA6BQ,SAASZ,KAAtC,SAA+CY,SAASJ,GAAxD,CAAf;AACAK,WAAOC,WAAP,CAAmBD,OAAOE,WAAP,KAAuBJ,MAA1C;AACA,WAAOhB,KAAK;AACVS,YAAMS,OAAOE,WAAP,EADI;AAEVf,aAAOa,OAAOG,QAAP,KAAoB,CAFjB;AAGVR,WAAKK,OAAOP,OAAP;AAHK,KAAL,CAAP;AAKD,GATD;;AAWA,MAAMW,cAAc,SAAdA,WAAc,CAACrB,IAAD,EAAOe,MAAP,EAAkB;AACpC,QAAMC,WAAWf,KAAK,EAAEO,MAAMR,KAAKQ,IAAb,EAAmBJ,OAAOJ,KAAKI,KAA/B,EAAsCQ,KAAKZ,KAAKY,GAAhD,EAAL,CAAjB;AACA,QAAMK,SAAS,IAAIR,IAAJ,CAAYO,SAASR,IAArB,SAA6BQ,SAASZ,KAAtC,SAA+CY,SAASJ,GAAxD,CAAf;AACAK,WAAOK,QAAP,CAAgBL,OAAOG,QAAP,KAAoBL,MAApC;AACA,WAAOhB,KAAK;AACVS,YAAMS,OAAOE,WAAP,EADI;AAEVf,aAAOa,OAAOG,QAAP,KAAoB,CAFjB;AAGVR,WAAKK,OAAOP,OAAP;AAHK,KAAL,CAAP;AAKD,GATD;;AAWA,MAAMa,YAAY,SAAZA,SAAY,CAACvB,IAAD,EAAOe,MAAP,EAAkB;AAClC,QAAMC,WAAWf,KAAK,EAAEO,MAAMR,KAAKQ,IAAb,EAAmBJ,OAAOJ,KAAKI,KAA/B,EAAsCQ,KAAKZ,KAAKY,GAAhD,EAAL,CAAjB;AACA,QAAMK,SAAS,IAAIR,IAAJ,CAAYO,SAASR,IAArB,SAA6BQ,SAASZ,KAAtC,SAA+CY,SAASJ,GAAxD,CAAf;AACAK,WAAOO,OAAP,CAAeP,OAAOP,OAAP,KAAmBK,MAAlC;AACA,WAAOhB,KAAK;AACVS,YAAMS,OAAOE,WAAP,EADI;AAEVf,aAAOa,OAAOG,QAAP,KAAoB,CAFjB;AAGVR,WAAKK,OAAOP,OAAP;AAHK,KAAL,CAAP;AAKD,GATD;;AAWA,SAAO;AACLhB,UADK;AAELC,cAFK;AAGLC,4BAHK;AAILG,cAJK;AAKLE,cALK;AAMLU,oBANK;AAOLE,kBAPK;AAQLV,8BARK;AASLI,kCATK;AAULO,0BAVK;AAWLO,4BAXK;AAYLE;AAZK,GAAP;AAcD,CAvFD;;AAyFAE,QAAQhC,OAAR,GAAkBA,OAAlB","file":"gregorian.adapter.js","sourcesContent":["const Adapter = function Adapter() {\n  const id = 'coripo.coripo.adapter.gregorian';\n  const name = 'Gregorian';\n  const description = 'The Gregorian calendar is internationally the most widely used civil calendar.';\n\n  const months = [\n    { name: 'January', short: 'Jan' },\n    { name: 'February', short: 'Feb' },\n    { name: 'March', short: 'Mar' },\n    { name: 'April', short: 'Apr' },\n    { name: 'May', short: 'May' },\n    { name: 'June', short: 'Jun' },\n    { name: 'July', short: 'Jul' },\n    { name: 'August', short: 'Aug' },\n    { name: 'September', short: 'Sept' },\n    { name: 'October', short: 'Oct' },\n    { name: 'November', short: 'Nov' },\n    { name: 'December', short: 'Dec' },\n  ];\n\n  const l10n = date => date;\n\n  const i18n = ldate => ldate;\n\n  const getMonthName = (month, short) => {\n    const mon = (months[month - 1]);\n    if (typeof mon === 'undefined') {\n      throw new Error('Invalid month number, number should be between 1 and 12');\n    }\n    return short ? mon.short : mon.name;\n  };\n\n  const getMonthLength = (year, month) => new Date(year, month, 0).getDate();\n\n  const isValid = date => (date.year >= 1)\n    && (date.month >= 1 && date.month <= 12)\n    && (date.day >= 1 && date.day <= getMonthLength(date.year, date.month));\n\n  const isLeap = year => ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n\n  const offsetYear = (date, offset) => {\n    const i18nDate = i18n({ year: date.year, month: date.month, day: date.day });\n    const jsDate = new Date(`${i18nDate.year}-${i18nDate.month}-${i18nDate.day}`);\n    jsDate.setFullYear(jsDate.getFullYear() + offset);\n    return l10n({\n      year: jsDate.getFullYear(),\n      month: jsDate.getMonth() + 1,\n      day: jsDate.getDate(),\n    });\n  };\n\n  const offsetMonth = (date, offset) => {\n    const i18nDate = i18n({ year: date.year, month: date.month, day: date.day });\n    const jsDate = new Date(`${i18nDate.year}-${i18nDate.month}-${i18nDate.day}`);\n    jsDate.setMonth(jsDate.getMonth() + offset);\n    return l10n({\n      year: jsDate.getFullYear(),\n      month: jsDate.getMonth() + 1,\n      day: jsDate.getDate(),\n    });\n  };\n\n  const offsetDay = (date, offset) => {\n    const i18nDate = i18n({ year: date.year, month: date.month, day: date.day });\n    const jsDate = new Date(`${i18nDate.year}-${i18nDate.month}-${i18nDate.day}`);\n    jsDate.setDate(jsDate.getDate() + offset);\n    return l10n({\n      year: jsDate.getFullYear(),\n      month: jsDate.getMonth() + 1,\n      day: jsDate.getDate(),\n    });\n  };\n\n  return {\n    id,\n    name,\n    description,\n    l10n,\n    i18n,\n    isValid,\n    isLeap,\n    getMonthName,\n    getMonthLength,\n    offsetYear,\n    offsetMonth,\n    offsetDay,\n  };\n};\n\nexports.Adapter = Adapter;\n"]}